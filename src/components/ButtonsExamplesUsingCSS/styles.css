/* root colors */
/* https://coolors.co/8789c0-45f0df-c2cae8-8380b6-111d4a */
:root {
  --primary: #0d6efd;
  --primary-bg-hover: #0b5ed7;
  --primary-border-hover: #0b58d6;
  --primary-bg-active: #0a58ca;
  --primary-border-active: #0a53be;
  --primary-bg-focus: #0b5ed7;
  --primary-border-focus: #0a58ca;
  --primary-boxshadow-focus: rgb(49 132 253 / 50%);
  --primary-rgb: 13, 109, 253;
  --primary-hsl: 216, 98%, 52%;
  --pending: 69, 240, 223;
  --pendingAs: 69 240 223;
  --outlinePending: 91, 240, 225;
  --outlinePendingAs: 91 240 225;
  --in_progress: 194, 202, 232;
  --completed: 131, 128, 182;
  --cancelled: rgb(17, 29, 74);
  --hover-brightness: 0.85;
  --border-hover-brightness: 0.80;
  --border-active-brightness: 0.75;
}

/* Example Bootstrap button styles */

.btn-primaryclone {
  color: #fff !important;
  border-color: var(--primary) !important;
  background-color: var(--primary) !important;
}

.btn-outline-primaryclone {
  color: var(--primary) !important;
  border-color: var(--primary) !important;
  background-color: inherit;
}

.btn-primaryclone:hover,
.btn-outline-primaryclone:hover {
  color: #fff !important;
  background-color: var(--primary-bg-hover) !important;
  border-color: var(--primary-border-hover) !important;
}

.btn-primaryclone:focus,
.btn-outline-primaryclone:focus {
  background-color: var(--primary-bg-focus) !important;
  box-shadow: 0 0 0 0.25rem var(--primary-boxshadow-focus) !important;
}

.btn-primaryclone:not(:disabled):not(.disabled).active {
  background-color: var(--primary-bg-active) !important;
  border-color: var(--primary-border-active) !important;
}

.btn-outline-primaryclone:not(:disabled):not(.disabled).active {
  color: #fff !important;
  /* fix color when not focus-within? */
  background-color: var(--primary) !important;
  border-color: var(--primary) !important;
}


/* @function convert-color($hex, $fr) {
    @return rgba(red($hex), green($hex), blue($hex), $fr);
  }
  
  @function text-color($color) {
    @if (lightness($color) > 50) {
      @return #000;
    } @else {
      @return #fff;
    }
  }
  
  @mixin common-mixin($color) {
    border-color: $color;
    &:hover {
      background-color: darken($color, 7%);
      border-color: darken($color, 11%);
    }
    &:focus {
      box-shadow: 0 0 0 0.25rem transparentize($color, 0.5);
    }
    &:not(:disabled, .disabled) {
      &:active,
      &.active {
        background-color: darken($color, 7%);
        border-color: darken($color, 11%);
      }
    }
  }
  
  @mixin btn-mixin($color) {
    @include common-mixin($color);
    background-color: $color;
    color: text-color($color);
  }
  
  @mixin outline-mixin($color) {
    @include common-mixin($color);
    background-color: convert-color($color, 0);
    color: $color;
    &:hover {
      color: text-color($color);
    }
    &:not(:disabled, .disabled) {
      &:active,
      &.active {
        color: text-color($color);
      }
    }
  } */

/* @import "_variables";
@import "_mixins";

.btn {
    &.btn- {
        &red {
            @include btn-mixin($red);
        }

        &yellow {
            @include btn-mixin($yellow);
        }

        &pink {
            @include btn-mixin($pink);
        }

        &green {
            @include btn-mixin($green);
        }

        &orange {
            @include btn-mixin($orange);
        }

        &purple {
            @include btn-mixin($purple);
        }

        &blue {
            @include btn-mixin($blue);
        }
    }

    &.outline- {
        &red {
            @include outline-mixin($red);
        }

        &yellow {
            @include outline-mixin($yellow);
        }

        &pink {
            @include outline-mixin($pink);
        }

        &green {
            @include outline-mixin($green);
        }

        &orange {
            @include outline-mixin($orange);
        }

        &purple {
            @include outline-mixin($purple);
        }

        &blue {
            @include outline-mixin($blue);
        }
    }
} */